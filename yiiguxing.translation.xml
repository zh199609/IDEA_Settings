<application>
  <component name="AppStorage">
    <histories>
      <item value="Simple task executor interface that abstracts the execution of a Runnable. Implementations can use all sorts of different execution strategies, such as: synchronous, asynchronous, using a thread pool, and more. Equivalent to JDK 1.5's Executor interface; extending it now in Spring 3.0, so that clients may declare a dependency on an Executor and receive any TaskExecutor implementation. This interface remains separate from the standard Executor interface mainly for backwards compatibility with JDK 1.4 in Spring 2.x." />
      <item value="Invocation" />
      <item value="invoked" />
      <item value="This method is not invoked for the main method thread or &quot;system&quot; group threads createdset up by the VM. Any new functionality added to this method in the future may have to also be added to the VM" />
      <item value="Unable to allocate 129536KB bitmaps for parallel garbage collection for the requested 4145152KB heap" />
      <item value="parallel" />
      <item value="allocate" />
      <item value="eturns the value to which the specified key is mapped, or null if this map contains no mapping for the key. More formally, if this map contains a mapping from a key k to a value v such that (key==null ? k==null : key.equals(k)), then this method returns v; otherwise it returns null. (There can be at most one such mapping.) If this map permits null values, then a return value of null does not necessarily indicate that the map contains no mapping for the key; it's also possible that the map explicitly maps the key to null. The containsKey operation may be used to distinguish these two cases. Params: key – the key whose associated value is to be returned Returns: the value to which the specified key is mapped, or null if this map contains no mapping for the key" />
      <item value="Field number for get and set indicating the day of the month. This is a synonym for DATE. The first day of the month has value 1." />
      <item value="excludes" />
      <item value="Multiple Source Configuration Manager" />
      <item value="eligible" />
      <item value="Returns an encoder instance that encodes equivalently to this one, but without adding any padding character at the end of the encoded byte data. The encoding scheme of this encoder instance is unaffected by this invocation. The returned encoder instance should be used for non-padding encoding operation. Returns: an equivalent encoder that encodes without adding any padding character at the end" />
      <item value="Encodes all bytes from the specified byte array into a newly-allocated byte array using the Base64 encoding scheme. The returned byte array is of the length of the resulting bytes. Params: src – the byte array to encode Returns: A newly-allocated byte array containing the resulting encoded bytes." />
      <item value="Decodes a Base64 encoded String into a newly-allocated byte array using the Base64 encoding scheme. An invocation of this method has exactly the same effect as invoking decode(src.getBytes(StandardCharsets.ISO_8859_1)) Params: src – the string to decode Returns: A newly-allocated byte array containing the decoded bytes. Throws: IllegalArgumentException – if src is not in valid Base64 scheme" />
      <item value="com.microsoft.sqlserver.jdbc.SQLServerException: The column name 'CreatorId' is specified more than once in the SET clause or column list of an INSERT. A column cannot be assigned more than one value in the same clause. Modify the clause to make sure that a column is updated only once. If this statement updates or inserts columns into a view, column aliasing can conceal the duplication in your code" />
      <item value="Add an attribute to the model. Params: attributeName – name of the object to add to the model attributeValue – object to add to the model (never null)" />
      <item value="parameterTypes – the parameter array" />
      <item value="By default, the content of the &quot;default&quot; model is used both during rendering and redirect scenarios. Alternatively a controller method can declare a RedirectAttributes argument and use it to provide attributes for a redirect. Setting this flag to true ensures the &quot;default&quot; model is never used in a redirect scenario even if a RedirectAttributes argument is not declared. Setting it to false means the &quot;default&quot; model may be used in a redirect if the controller method doesn't declare a RedirectAttributes argument. The default setting is false but new applications should consider setting it to true." />
      <item value="No qualifying bean of type" />
      <item value="expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired" />
      <item value="Returns true if this list contains the specified element. More formally, returns true if and only if this list contains at least one element e such that (o==null ? e==null : o.equals(e)). Params: o – element whose presence in this list is to be tested Returns: true if this list contains the specified element" />
      <item value="clause" />
      <item value="nknown column 'approve_status' in 'order clause'" />
      <item value="Return the value if present, otherwise return other. Params: other – the value to be returned if there is no value present, may be null Returns: the value, if present, otherwise other" />
      <item value="Error while getting data source javax.naming.NoInitialContextException: Need to specify class name in environment or system property, or as an applet parameter, or in an application resource file: java.naming.factory.initial at javax.naming.NoInitialContextException: Need to specify class name in environment or system property, or as an applet parameter, or in an application resource file: java.naming.factory.initial" />
      <item value="get Generated Keys" />
      <item value="Illegal State Exception" />
      <item value="Need to specify class name in environment or system property, or as an applet parameter, or in an application resource file: java.naming.factory.initial" />
      <item value="No Initial Context Exception" />
      <item value="Checkstyle" />
      <item value="Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder" />
      <item value="Removes the first occurrence of the specified element from this list, if it is present (optional operation). If this list does not contain the element, it is unchanged. More formally, removes the element with the lowest index i such that (o==null ? get(i)==null : o.equals(get(i))) (if such an element exists). Returns true if this list contained the specified element (or equivalently, if this list changed as a result of the call). Params: o – element to be removed from this list, if present Returns: true if this list contained the specified element" />
      <item value="Subquery returned more than 1 value. This is not permitted when the subquery follows =, !=, &lt;, &lt;= , &gt;, &gt;= or when the subquery is used as an expression" />
      <item value="Subquery" />
      <item value="Lifecycle Processor" />
      <item value="org.mockito.exceptions.misusing.InvalidUseOfMatchersException: Misplaced or misused argument matcher detected here" />
      <item value="refresh" />
      <item value="present" />
      <item value="HttpMessageConverter found for request type" />
      <item value="no suitable" />
      <item value="Could not write request" />
      <item value="Numeric" />
      <item value="LifecycleProcessor not initialized - call 'refresh' before invoking lifecycle methods via the context: Root WebApplicationContext: startup date [Fri Apr 29 11:23:12 CST 2022]; root of context hierarchy" />
      <item value="String or binary data would be truncated" />
      <item value="Creates an Executor that uses a single worker thread operating off an unbounded queue. (Note however that if this single thread terminates due to a failure during execution prior to shutdown, a new one will take its place if needed to execute subsequent tasks.) Tasks are guaranteed to execute sequentially, and no more than one task will be active at any given time. Unlike the otherwise equivalent newFixedThreadPool(1) the returned executor is guaranteed not to be reconfigurable to use additional threads. Returns: the newly created single-threaded Executor" />
      <item value="Error during artifact deployment. See server log for details." />
      <item value="Rejected Execution Exception" />
      <item value="Error: A JNI error has occurred, please check your installation and try again" />
      <item value="test should never throw an exception to this level" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="209" />
        <entry key="ENGLISH" value="210" />
        <entry key="ROMANIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1660209916846" />
  </component>
</application>